//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovieServiceClient.MovieService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientModel", Namespace="http://schemas.datacontract.org/2004/07/Common.Models")]
    [System.SerializableAttribute()]
    public partial class ClientModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SeanceModel", Namespace="http://schemas.datacontract.org/2004/07/Common.Models")]
    [System.SerializableAttribute()]
    public partial class SeanceModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CinemaHallIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieServiceClient.MovieService.MovieModel MovieInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SeanceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeanceIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CinemaHallID {
            get {
                return this.CinemaHallIDField;
            }
            set {
                if ((this.CinemaHallIDField.Equals(value) != true)) {
                    this.CinemaHallIDField = value;
                    this.RaisePropertyChanged("CinemaHallID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieID {
            get {
                return this.MovieIDField;
            }
            set {
                if ((this.MovieIDField.Equals(value) != true)) {
                    this.MovieIDField = value;
                    this.RaisePropertyChanged("MovieID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieServiceClient.MovieService.MovieModel MovieInfo {
            get {
                return this.MovieInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.MovieInfoField, value) != true)) {
                    this.MovieInfoField = value;
                    this.RaisePropertyChanged("MovieInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SeanceDate {
            get {
                return this.SeanceDateField;
            }
            set {
                if ((this.SeanceDateField.Equals(value) != true)) {
                    this.SeanceDateField = value;
                    this.RaisePropertyChanged("SeanceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeanceID {
            get {
                return this.SeanceIDField;
            }
            set {
                if ((this.SeanceIDField.Equals(value) != true)) {
                    this.SeanceIDField = value;
                    this.RaisePropertyChanged("SeanceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MovieModel", Namespace="http://schemas.datacontract.org/2004/07/Common.Models")]
    [System.SerializableAttribute()]
    public partial class MovieModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PublicationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegisseurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cast {
            get {
                return this.CastField;
            }
            set {
                if ((object.ReferenceEquals(this.CastField, value) != true)) {
                    this.CastField = value;
                    this.RaisePropertyChanged("Cast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageContent {
            get {
                return this.ImageContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageContentField, value) != true)) {
                    this.ImageContentField = value;
                    this.RaisePropertyChanged("ImageContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieID {
            get {
                return this.MovieIDField;
            }
            set {
                if ((this.MovieIDField.Equals(value) != true)) {
                    this.MovieIDField = value;
                    this.RaisePropertyChanged("MovieID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Note {
            get {
                return this.NoteField;
            }
            set {
                if ((this.NoteField.Equals(value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PublicationDate {
            get {
                return this.PublicationDateField;
            }
            set {
                if ((this.PublicationDateField.Equals(value) != true)) {
                    this.PublicationDateField = value;
                    this.RaisePropertyChanged("PublicationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Regisseur {
            get {
                return this.RegisseurField;
            }
            set {
                if ((object.ReferenceEquals(this.RegisseurField, value) != true)) {
                    this.RegisseurField = value;
                    this.RaisePropertyChanged("Regisseur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReservationModel", Namespace="http://schemas.datacontract.org/2004/07/Common.Models")]
    [System.SerializableAttribute()]
    public partial class ReservationModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReservationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReservationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieServiceClient.MovieService.ReservationPositionModel[] ReservationInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeanceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieServiceClient.MovieService.SeanceModel SeanceInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReservationDate {
            get {
                return this.ReservationDateField;
            }
            set {
                if ((this.ReservationDateField.Equals(value) != true)) {
                    this.ReservationDateField = value;
                    this.RaisePropertyChanged("ReservationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReservationID {
            get {
                return this.ReservationIDField;
            }
            set {
                if ((this.ReservationIDField.Equals(value) != true)) {
                    this.ReservationIDField = value;
                    this.RaisePropertyChanged("ReservationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieServiceClient.MovieService.ReservationPositionModel[] ReservationInfo {
            get {
                return this.ReservationInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservationInfoField, value) != true)) {
                    this.ReservationInfoField = value;
                    this.RaisePropertyChanged("ReservationInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeanceID {
            get {
                return this.SeanceIDField;
            }
            set {
                if ((this.SeanceIDField.Equals(value) != true)) {
                    this.SeanceIDField = value;
                    this.RaisePropertyChanged("SeanceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieServiceClient.MovieService.SeanceModel SeanceInfo {
            get {
                return this.SeanceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.SeanceInfoField, value) != true)) {
                    this.SeanceInfoField = value;
                    this.RaisePropertyChanged("SeanceInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReservationPositionModel", Namespace="http://schemas.datacontract.org/2004/07/Common.Models")]
    [System.SerializableAttribute()]
    public partial class ReservationPositionModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReservationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReservationPositionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReservationID {
            get {
                return this.ReservationIDField;
            }
            set {
                if ((this.ReservationIDField.Equals(value) != true)) {
                    this.ReservationIDField = value;
                    this.RaisePropertyChanged("ReservationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReservationPositionID {
            get {
                return this.ReservationPositionIDField;
            }
            set {
                if ((this.ReservationPositionIDField.Equals(value) != true)) {
                    this.ReservationPositionIDField = value;
                    this.RaisePropertyChanged("ReservationPositionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CinemaHallModel", Namespace="http://schemas.datacontract.org/2004/07/Common.Models")]
    [System.SerializableAttribute()]
    public partial class CinemaHallModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CinemaHallIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CinemaHallID {
            get {
                return this.CinemaHallIDField;
            }
            set {
                if ((this.CinemaHallIDField.Equals(value) != true)) {
                    this.CinemaHallIDField = value;
                    this.RaisePropertyChanged("CinemaHallID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Positions {
            get {
                return this.PositionsField;
            }
            set {
                if ((this.PositionsField.Equals(value) != true)) {
                    this.PositionsField = value;
                    this.RaisePropertyChanged("Positions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((this.RowsField.Equals(value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MovieService.IClientService")]
    public interface IClientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Login", ReplyAction="http://tempuri.org/IClientService/LoginResponse")]
        MovieServiceClient.MovieService.ClientModel Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Login", ReplyAction="http://tempuri.org/IClientService/LoginResponse")]
        System.Threading.Tasks.Task<MovieServiceClient.MovieService.ClientModel> LoginAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSeancesByMovieId", ReplyAction="http://tempuri.org/IClientService/GetSeancesByMovieIdResponse")]
        MovieServiceClient.MovieService.SeanceModel[] GetSeancesByMovieId(int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSeancesByMovieId", ReplyAction="http://tempuri.org/IClientService/GetSeancesByMovieIdResponse")]
        System.Threading.Tasks.Task<MovieServiceClient.MovieService.SeanceModel[]> GetSeancesByMovieIdAsync(int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSeancesByTitle", ReplyAction="http://tempuri.org/IClientService/GetSeancesByTitleResponse")]
        MovieServiceClient.MovieService.SeanceModel[] GetSeancesByTitle(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSeancesByTitle", ReplyAction="http://tempuri.org/IClientService/GetSeancesByTitleResponse")]
        System.Threading.Tasks.Task<MovieServiceClient.MovieService.SeanceModel[]> GetSeancesByTitleAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddReservationSinglePosition", ReplyAction="http://tempuri.org/IClientService/AddReservationSinglePositionResponse")]
        void AddReservationSinglePosition(int seanceId, int clientId, int row, int position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddReservationSinglePosition", ReplyAction="http://tempuri.org/IClientService/AddReservationSinglePositionResponse")]
        System.Threading.Tasks.Task AddReservationSinglePositionAsync(int seanceId, int clientId, int row, int position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddReservationMultiplePosition", ReplyAction="http://tempuri.org/IClientService/AddReservationMultiplePositionResponse")]
        void AddReservationMultiplePosition(int seanceId, int clientId, int[] rows, int[] positions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddReservationMultiplePosition", ReplyAction="http://tempuri.org/IClientService/AddReservationMultiplePositionResponse")]
        System.Threading.Tasks.Task AddReservationMultiplePositionAsync(int seanceId, int clientId, int[] rows, int[] positions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateReservation", ReplyAction="http://tempuri.org/IClientService/UpdateReservationResponse")]
        void UpdateReservation(int reservationPositionId, int newRow, int newPosition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateReservation", ReplyAction="http://tempuri.org/IClientService/UpdateReservationResponse")]
        System.Threading.Tasks.Task UpdateReservationAsync(int reservationPositionId, int newRow, int newPosition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetReservation", ReplyAction="http://tempuri.org/IClientService/GetReservationResponse")]
        MovieServiceClient.MovieService.ReservationModel GetReservation(int ReservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetReservation", ReplyAction="http://tempuri.org/IClientService/GetReservationResponse")]
        System.Threading.Tasks.Task<MovieServiceClient.MovieService.ReservationModel> GetReservationAsync(int ReservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetReservations", ReplyAction="http://tempuri.org/IClientService/GetReservationsResponse")]
        MovieServiceClient.MovieService.ReservationModel[] GetReservations(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetReservations", ReplyAction="http://tempuri.org/IClientService/GetReservationsResponse")]
        System.Threading.Tasks.Task<MovieServiceClient.MovieService.ReservationModel[]> GetReservationsAsync(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveReservation", ReplyAction="http://tempuri.org/IClientService/RemoveReservationResponse")]
        void RemoveReservation(int reservationId, System.Nullable<int> row, System.Nullable<int> position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveReservation", ReplyAction="http://tempuri.org/IClientService/RemoveReservationResponse")]
        System.Threading.Tasks.Task RemoveReservationAsync(int reservationId, System.Nullable<int> row, System.Nullable<int> position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveReservations", ReplyAction="http://tempuri.org/IClientService/RemoveReservationsResponse")]
        void RemoveReservations(int reservationId, int[] rows, int[] positions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveReservations", ReplyAction="http://tempuri.org/IClientService/RemoveReservationsResponse")]
        System.Threading.Tasks.Task RemoveReservationsAsync(int reservationId, int[] rows, int[] positions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetMovie", ReplyAction="http://tempuri.org/IClientService/GetMovieResponse")]
        MovieServiceClient.MovieService.MovieModel GetMovie(int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetMovie", ReplyAction="http://tempuri.org/IClientService/GetMovieResponse")]
        System.Threading.Tasks.Task<MovieServiceClient.MovieService.MovieModel> GetMovieAsync(int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetMovies", ReplyAction="http://tempuri.org/IClientService/GetMoviesResponse")]
        MovieServiceClient.MovieService.MovieModel[] GetMovies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetMovies", ReplyAction="http://tempuri.org/IClientService/GetMoviesResponse")]
        System.Threading.Tasks.Task<MovieServiceClient.MovieService.MovieModel[]> GetMoviesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCinemaHall", ReplyAction="http://tempuri.org/IClientService/GetCinemaHallResponse")]
        MovieServiceClient.MovieService.CinemaHallModel GetCinemaHall(int cinemaHallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCinemaHall", ReplyAction="http://tempuri.org/IClientService/GetCinemaHallResponse")]
        System.Threading.Tasks.Task<MovieServiceClient.MovieService.CinemaHallModel> GetCinemaHallAsync(int cinemaHallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCinemaHallsForMovie", ReplyAction="http://tempuri.org/IClientService/GetCinemaHallsForMovieResponse")]
        MovieServiceClient.MovieService.CinemaHallModel[] GetCinemaHallsForMovie(MovieServiceClient.MovieService.MovieModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCinemaHallsForMovie", ReplyAction="http://tempuri.org/IClientService/GetCinemaHallsForMovieResponse")]
        System.Threading.Tasks.Task<MovieServiceClient.MovieService.CinemaHallModel[]> GetCinemaHallsForMovieAsync(MovieServiceClient.MovieService.MovieModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetActualCinemaHallState", ReplyAction="http://tempuri.org/IClientService/GetActualCinemaHallStateResponse")]
        MovieServiceClient.MovieService.ReservationPositionModel[] GetActualCinemaHallState(int seanceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetActualCinemaHallState", ReplyAction="http://tempuri.org/IClientService/GetActualCinemaHallStateResponse")]
        System.Threading.Tasks.Task<MovieServiceClient.MovieService.ReservationPositionModel[]> GetActualCinemaHallStateAsync(int seanceId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientServiceChannel : MovieServiceClient.MovieService.IClientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientServiceClient : System.ServiceModel.ClientBase<MovieServiceClient.MovieService.IClientService>, MovieServiceClient.MovieService.IClientService {
        
        public ClientServiceClient() {
        }
        
        public ClientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MovieServiceClient.MovieService.ClientModel Login(string login1, string password) {
            return base.Channel.Login(login1, password);
        }
        
        public System.Threading.Tasks.Task<MovieServiceClient.MovieService.ClientModel> LoginAsync(string login, string password) {
            return base.Channel.LoginAsync(login, password);
        }
        
        public MovieServiceClient.MovieService.SeanceModel[] GetSeancesByMovieId(int movieId) {
            return base.Channel.GetSeancesByMovieId(movieId);
        }
        
        public System.Threading.Tasks.Task<MovieServiceClient.MovieService.SeanceModel[]> GetSeancesByMovieIdAsync(int movieId) {
            return base.Channel.GetSeancesByMovieIdAsync(movieId);
        }
        
        public MovieServiceClient.MovieService.SeanceModel[] GetSeancesByTitle(string title) {
            return base.Channel.GetSeancesByTitle(title);
        }
        
        public System.Threading.Tasks.Task<MovieServiceClient.MovieService.SeanceModel[]> GetSeancesByTitleAsync(string title) {
            return base.Channel.GetSeancesByTitleAsync(title);
        }
        
        public void AddReservationSinglePosition(int seanceId, int clientId, int row, int position) {
            base.Channel.AddReservationSinglePosition(seanceId, clientId, row, position);
        }
        
        public System.Threading.Tasks.Task AddReservationSinglePositionAsync(int seanceId, int clientId, int row, int position) {
            return base.Channel.AddReservationSinglePositionAsync(seanceId, clientId, row, position);
        }
        
        public void AddReservationMultiplePosition(int seanceId, int clientId, int[] rows, int[] positions) {
            base.Channel.AddReservationMultiplePosition(seanceId, clientId, rows, positions);
        }
        
        public System.Threading.Tasks.Task AddReservationMultiplePositionAsync(int seanceId, int clientId, int[] rows, int[] positions) {
            return base.Channel.AddReservationMultiplePositionAsync(seanceId, clientId, rows, positions);
        }
        
        public void UpdateReservation(int reservationPositionId, int newRow, int newPosition) {
            base.Channel.UpdateReservation(reservationPositionId, newRow, newPosition);
        }
        
        public System.Threading.Tasks.Task UpdateReservationAsync(int reservationPositionId, int newRow, int newPosition) {
            return base.Channel.UpdateReservationAsync(reservationPositionId, newRow, newPosition);
        }
        
        public MovieServiceClient.MovieService.ReservationModel GetReservation(int ReservationId) {
            return base.Channel.GetReservation(ReservationId);
        }
        
        public System.Threading.Tasks.Task<MovieServiceClient.MovieService.ReservationModel> GetReservationAsync(int ReservationId) {
            return base.Channel.GetReservationAsync(ReservationId);
        }
        
        public MovieServiceClient.MovieService.ReservationModel[] GetReservations(int clientId) {
            return base.Channel.GetReservations(clientId);
        }
        
        public System.Threading.Tasks.Task<MovieServiceClient.MovieService.ReservationModel[]> GetReservationsAsync(int clientId) {
            return base.Channel.GetReservationsAsync(clientId);
        }
        
        public void RemoveReservation(int reservationId, System.Nullable<int> row, System.Nullable<int> position) {
            base.Channel.RemoveReservation(reservationId, row, position);
        }
        
        public System.Threading.Tasks.Task RemoveReservationAsync(int reservationId, System.Nullable<int> row, System.Nullable<int> position) {
            return base.Channel.RemoveReservationAsync(reservationId, row, position);
        }
        
        public void RemoveReservations(int reservationId, int[] rows, int[] positions) {
            base.Channel.RemoveReservations(reservationId, rows, positions);
        }
        
        public System.Threading.Tasks.Task RemoveReservationsAsync(int reservationId, int[] rows, int[] positions) {
            return base.Channel.RemoveReservationsAsync(reservationId, rows, positions);
        }
        
        public MovieServiceClient.MovieService.MovieModel GetMovie(int movieId) {
            return base.Channel.GetMovie(movieId);
        }
        
        public System.Threading.Tasks.Task<MovieServiceClient.MovieService.MovieModel> GetMovieAsync(int movieId) {
            return base.Channel.GetMovieAsync(movieId);
        }
        
        public MovieServiceClient.MovieService.MovieModel[] GetMovies() {
            return base.Channel.GetMovies();
        }
        
        public System.Threading.Tasks.Task<MovieServiceClient.MovieService.MovieModel[]> GetMoviesAsync() {
            return base.Channel.GetMoviesAsync();
        }
        
        public MovieServiceClient.MovieService.CinemaHallModel GetCinemaHall(int cinemaHallId) {
            return base.Channel.GetCinemaHall(cinemaHallId);
        }
        
        public System.Threading.Tasks.Task<MovieServiceClient.MovieService.CinemaHallModel> GetCinemaHallAsync(int cinemaHallId) {
            return base.Channel.GetCinemaHallAsync(cinemaHallId);
        }
        
        public MovieServiceClient.MovieService.CinemaHallModel[] GetCinemaHallsForMovie(MovieServiceClient.MovieService.MovieModel model) {
            return base.Channel.GetCinemaHallsForMovie(model);
        }
        
        public System.Threading.Tasks.Task<MovieServiceClient.MovieService.CinemaHallModel[]> GetCinemaHallsForMovieAsync(MovieServiceClient.MovieService.MovieModel model) {
            return base.Channel.GetCinemaHallsForMovieAsync(model);
        }
        
        public MovieServiceClient.MovieService.ReservationPositionModel[] GetActualCinemaHallState(int seanceId) {
            return base.Channel.GetActualCinemaHallState(seanceId);
        }
        
        public System.Threading.Tasks.Task<MovieServiceClient.MovieService.ReservationPositionModel[]> GetActualCinemaHallStateAsync(int seanceId) {
            return base.Channel.GetActualCinemaHallStateAsync(seanceId);
        }
    }
}
